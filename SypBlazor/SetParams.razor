@page "/setparams"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore
@inject NavigationManager navManager

@if (isConnected)
{
    <span>Общие</span>
    <input type="checkbox" @bind="ic0" /> <span>|</span>
    <span>Детали</span>
    <input type="checkbox" @bind="ic1" /> <span>|</span>
    <span>Семья</span>
    <input type="checkbox" @bind="ic2" /> <span>|</span>

    <button @onclick="OnChange" >OK</button>
    <button @onclick="OnCancel">Cancel</button>
}
else
{
    <p>Loading...</p>
}

@code {
    private bool ic0 = true;
    private bool ic1 = false;
    private bool ic2 = false;

    private void OnChange()
    {
        string sbor = (ic0 ? "0 " : "") +
            (ic1 ? "1 " : "") +
            (ic2 ? "2 " : "");
        ProtectedLocalStore.SetAsync("setSbor", sbor);
        navManager.NavigateTo("", true);
    }
    private void OnCancel()
    {
        navManager.NavigateTo("", true);
    }

    //private string setString = ""; // Идентификаторы через запятую без пробелов
    //private HashSet<string> hashSet = new HashSet<string>();
    private bool isConnected;



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isConnected = true;
            await LoadStateAsync();
            StateHasChanged();
        }
    }

    private async Task LoadStateAsync()
    {
        var result = await ProtectedLocalStore.GetAsync<string>("setSbor");
        int[] vec = new int[0];
        if (result.Success && !string.IsNullOrEmpty(result.Value))
        {
            vec = result.Value.Split(' ').Where(v => !string.IsNullOrEmpty(v)).Select(v => Int32.Parse(v)).ToArray();
        }
        bool[] mask = Enumerable.Repeat(false, 3).ToArray();
        for (int i = 0; i < vec.Length; i++) mask[vec[i]] = true;
        ic0 = mask[0]; ic1 = mask[1]; ic2 = mask[2];
    }

}