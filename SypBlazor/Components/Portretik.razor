@using Factograph.Data
@using Factograph.Data.r
@inject Factograph.Data.IFDataService db

<div>
    <Box Prolog="@Prolog" Epilog="@(dates)"
         Name="@(name)" PhotoUrl="@(URL)" Regime="photo" Reference="@(Reference)"
         Width="150" Height="150"
          />
</div>

@code {
    [Parameter]
    public Rec? tree { get; set; }
    [Parameter]
    public string Prolog { get; set; } = "";
    private string? name = null;
    private string? dates = null;
    private string? description = null;
    private string? uri = null;
    private string? contenttype = null;
    private string? URL = null;
    private string? Reference = null; 

    protected override void OnParametersSet()
    {
        base.OnParametersSet(); 
        this.URL=null;
        if (tree != null)
        {
            Func<string?, int> ground_order = (string? val) => val == "official" ? 2 :
                (val == "portrait" ? 1 : 0);
            name = tree.GetText("http://fogid.net/o/name") ?? "noname";
            description = tree.GetText("http://fogid.net/o/description");
            dates = tree.GetDates();
            var doc = tree.GetInverse("http://fogid.net/o/reflected")
                .Select(re => (ground_order(re.GetStr("http://fogid.net/o/ground")),
                            re.GetDirect("http://fogid.net/o/in-doc")))
                .Where(gd => gd.Item2?.Tp == "http://fogid.net/o/photo-doc")
                .Select(gd => (gd.Item1, gd.Item2?.GetStr("http://fogid.net/o/from-date"), gd.Item2))
                .OrderBy(gfd => gfd.Item1)
                .ThenBy(gfd => gfd.Item2)
                .LastOrDefault()
                .Item3;
            uri = doc?.GetStr("http://fogid.net/o/uri");
            if (uri != null) 
            { 
                URL = "docs/GetImage?u=" + uri + "&s=small";
            }
            Reference = "fam/" + tree.Id;
        }
    }
}
