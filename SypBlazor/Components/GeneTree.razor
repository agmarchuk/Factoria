@using Factograph.Data
@using Factograph.Data.r
@inject Factograph.Data.IFDataService db

<h2>Семейное дерево</h2>

@if (father != null)
{
    <div>
        Отец: <a href="gene/@father.Id">@father.GetText("http://fogid.net/o/name")</a> @father.GetDates()
    </div>
}
@if (mother != null)
{
    <div>
        Мать: <a href="gene/@mother.Id">@mother.GetText("http://fogid.net/o/name")</a> @mother.GetDates()
    </div>
}


@code {
    [Parameter]
    public string? entityId { get; set; } = null; 

    private Rec? tree { get; set; }
    private Rec? father = null;
    private Rec? mother = null;
    private string?[] wifes = new string[0];
    private string?[] husbands = new string[0];
    private string[] brothers = new string[0];
    private string?[] children = new string[0];


    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (entityId == null) return;
        father = null;
        mother = null;
        wifes = new string[0];
        husbands = new string[0];
        brothers = new string[0];
        children = new string[0];

        tree = MkRec(entityId);
        if (tree == null) return;

        father = MkRec(tree.GetDirect("http://fogid.net/o/father")?.Id);
        mother = MkRec(tree.GetDirect("http://fogid.net/o/mother")?.Id);
    }
    //private Rec? MkRec(string? id)
    //{
    //    if (id == null) return null;
    //    RRecord? rrec = db.GetRRecord(id, true);
    //    if (rrec == null) { return null; }
    //    Rec shablon;
    //    shablon = Rec.GetUniShablon(rrec.Tp, 2, null, db.ontology);
    //    Rec tr = Rec.Build(rrec, shablon, db.ontology, idd => db.GetRRecord(idd, false));
    //    return tr;
    //}
    private Rec? MkRec(string? id) => Rec.MkRec(id, db.GetRRecord, db.ontology);
}
