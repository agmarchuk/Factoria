@using Microsoft.AspNetCore.Components.Authorization
@using Family.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inject FactographData.IFDataService db

<PageTitle>SypBlazor</PageTitle>

<div class="page">
    @if (expandSubNav)
    {
        <div class="sidebar" style="position:absolute;margin-top:64px;">
            <AuthorizeView>
                <Authorized>
                    <span style="color:white;">@(context.User.Identity?.Name)</span>
                    &nbsp;&nbsp; 
                    <a @onclick="Logout" href="javascript:void(0)">Logout</a>
                </Authorized>
                <NotAuthorized>
                    <!-- <a @onclick="ClickLogin" href="javascript:void(0)">Login</a> -->
                    <NavLink @onclick="ClickLogin" class="nav-link" href="javascript:void(0)">Login</NavLink>
                </NotAuthorized>
            </AuthorizeView>
            <div>
                <NavLink @onclick="Reload" href="javascript:void(0)">Перезагрузить!</NavLink>
                @if (loaddone)
                {
                    <button @onclick="OkButton">ok</button>
                }
            </div>
        </div>
    }


    <main>
        <nav class="navbar navbar-expand-xxl navbar-light bg-light" style="height:64px; padding-top:0px;  background-image:url(VertPoloska.jpg)">
            <div class="container-fluid" style="padding-left:0px; padding-top:0px;">
                <a class="navbar-brand" href="#">
                    @*<img src="FlyingBirdsSmall.jpg" alt="" width="268" height="64" style="">*@
                    <img src="SYPlogo.png" alt="" height="60" style="">
                </a>
                <div class="navbar-text">
                    <!-- <span style="color: black; font-size:larger; font-weight: bold;">Семейный архив</span>
                    <span>Марчуки, Беляевы, Кириковы, Петерсоны и др.</span> -->
                    <span style="color: black; font-size:larger; font-weight: bold;">Летняя школа юных программистов</span>
                    <span>архив ЛШЮП 1976-2023</span>
                </div>

@*                <form class="d-flex">
                    <input class="form-control me-2" type="search" placeholder="текст поиска" />
                    <button class="btn btn-outline-success" type="submit">Искать</button>
                </form>
*@
                <NavLink class="nav-link" @onclick="()=>expandSubNav = !expandSubNav">
                    <span class="navbar-toggler-icon"></span>
                </NavLink>

            </div>
        </nav>



        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool collapseNavMenu = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private bool expandSubNav;

    // Authorization
    private async Task ClickLogin()
    {
        collapseNavMenu = false;
        Console.WriteLine("collapse false");
        navManager.NavigateTo("/login/", true);
    }
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/index", true);
    }

    private bool loaddone = false;
    private void Reload()
    {
        db.Reload();
        loaddone = true;
    }
    private void OkButton()
    {
        loaddone = false;
        collapseNavMenu = false;
        navManager.NavigateTo("/index", true);       
    }
    private string? user = null;
    private bool toedit = false;
    protected override void OnParametersSet()
    {
        //user = this.context.User.Identity?.Name;
//        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
//        customAuthStateProvider.UpdateAuthenticationState(null);
//public override async Task<AuthenticationState> GetAuthenticationStateAsync()

        if (user != null) toedit = true;
    }
}