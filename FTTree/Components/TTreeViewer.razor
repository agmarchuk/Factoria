@using FTTree.Data
@using FactographData
@implements ITreeComponent
@inject FactographData.IFDataService db
@inject NavigationManager navigationManager

 <table>
@foreach(var ttree in ttrees)
{
    var texts = ttree.Groups.Where(gr => gr is Texts).ToArray();
    var directs = ttree.Groups.Where(gr => gr is TDTree).ToArray();
    var possibleDirects = db.ontology.GetDirectPropsByType(ttree.Tp).ToArray();

    @if (firstRow)
    {
        firstRow = false;
        <tr>
            @foreach (var possibleDirect in possibleDirects)
            {
                 <th>@db.GetOntLabel(possibleDirect)</th>

            }
        </tr>
    }
    <tr>

            @foreach (var possibleDirect in possibleDirects)
            {
                var value = texts.FirstOrDefault(text => text.Pred == possibleDirect);

                if (value != null)
                {
                    bool isEnum = db.ontology.IsEnumeration(value.Pred);
                    if (isEnum)
                    {
                        <td>@db.GetLangText(value, value.Pred)</td>
                    }
                    else
                    {
                        <td>@db.GetLangText(value)</td>
                    }

                }
                else
                {
                    value = directs.FirstOrDefault(text => text.Pred == possibleDirect);
                    if (value != null)
                    {
                        <td><NavLink href="@("/portrait/" + ((TDTree)value).Resource.Id)">@db.GetName(((TDTree)value).Resource)</NavLink></td>
                    }
                    else
                    {
                        <td></td>
                    }
                }
            }
    </tr>
    
}
</table>


@code {
    [Parameter]
    public TTree[] ttrees { get; set; }

    private bool firstRow = true;

    protected override void OnInitialized() // = On Page Load
    {
        firstRow = true;
    }

    protected override void OnParametersSet()
    {
        OnInitialized();
    }

    private void goToEntityUrl(string id)
    {
        navigationManager.NavigateTo("/viewer/" + id, true);
    }
}
