@using FTTree.Data;
@using FactographData.r;
@using FactorgaphyTTree.Data
@using FactographData
@implements IRecComponent
@inject FactographData.IFDataService db
@inject NavigationManager navigationManager

 <table>
@foreach(var rec in recs.Where(r => r.Tp != "delete"))
{
    var fields = rec.Props.Where(prop => prop is Tex || prop is Str || prop is Dir);
    //var possibleDirects = db.ontology.GetDirectPropsByType(ttree.Tp).Where(type => type != forbidden).ToArray();

    @if (firstRow)
    {
        firstRow = false;
        <tr>
            @foreach (var field in fields)
            {
                    <th>@db.GetOntologyLabel(field.Pred)</th>
            }
        </tr>
    }
    <tr>

            @foreach (var field in fields)
            {
                <DynamicComponent Type="@db.GetComponentType(field)"
                          Parameters="@(new Dictionary<string, object>(){{"property", field}, {"isEdited", false}})"> </DynamicComponent>

            }
    </tr>
    
}
</table>


@code {
    [Parameter]
    public Rec[] recs { get; set; }

    [Parameter]
    public string forbidden { get; set; }

    [Parameter]
    public Rec originalRecord { get; set; }


    private bool firstRow = true;

    protected override void OnInitialized() // = On Page Load
    {
        firstRow = true;
    }

    protected override void OnParametersSet()
    {
        OnInitialized();
    }
}
