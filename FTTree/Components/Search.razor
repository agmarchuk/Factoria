@using System.Collections.Generic
@using System.Linq
@using System.Xml.Linq
@using FTTree.Data;

@inject FactographData.IFDataService db

<div>
    <input @bind="searchsample" style="height:24px; margin-top:10px;margin-bottom:10px;" />
    @if (types.Length > 1)
    {
        <select @bind="searchtype" style="height: 24px; margin-top: 10px; margin-bottom: 10px; ">
            <option value=""></option>
            @foreach (var type in types.Where(t => db.GetOntologyLabel(t) != null)) //TODO: Надо бы более корректно...
            {
                <option value="@type">@(
                        db.GetOntologyLabel(type)
              )</option>
            }
        </select>
    } 
    else
    {
        searchtype = types[0];
    }
    <span>расш.<input type="checkbox" @bind="extended" /></span>
</div>
@if (!string.IsNullOrEmpty(searchsample))
{
    IEnumerable<XElement> items;
    if (extended)
    {
        items = db.SearchByWords(searchsample);
    }
    else
    {
        items = db.SearchByName(searchsample);
    }
    if (!string.IsNullOrEmpty(searchtype))
    {
        items = items.Where(it => db.ontology.DescendantsAndSelf(searchtype).Contains(it.Attribute("type").Value));
    }
    foreach (XElement item in items)
    {
        string idd = item.Attribute("id").Value;
        string tp = item.Attribute("type").Value;
        string nm = item.Elements("field")
            .FirstOrDefault(f => f.Attribute("prop").Value == "http://fogid.net/o/name")?.Value;
        if (showResults)
        {
            <div>@tp <a href="portrait/@(idd)"> @(nm) </a></div>
        } else
        {
            <div>@tp <a href="#" @onclick="@(() => SelectRecord(idd))" @onclick:preventDefault> @(nm) </a></div>
        }
    }
    @*    var q2 = db.GetItemByIdBasic("famwf1233_1001", false);
    <pre>@(q2.ToString())</pre>
*@
}
<div>
    @look
</div>

@code {
    [Parameter]
    public EventCallback<string> OnRecordSelect { get; set; }

    [Parameter]
    public bool showResults { get; set; } = true;

    [Parameter]
    public string[] types { get; set; } = new string[] { "http://fogid.net/o/person", "http://fogid.net/o/document" };

    private string searchsample = "";
    private string searchtype = "";
    private bool extended = false;
    private string look = "";
    private void SampleChanged()
    {
        look = "Hello!";
    }

    private void SelectRecord(string idd)
    {
        OnRecordSelect.InvokeAsync(idd);
        searchsample = "";
    }
}