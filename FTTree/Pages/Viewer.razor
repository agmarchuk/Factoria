@page "/viewer/{entityId?}"
@using FTTree.Components
@using FactographData
@inject IFDataService db
@using FactorgaphyTTree.Data;
@using OAData.Adapters
@using FactorgaphyTTree

<PageTitle>Viewer</PageTitle>

<h1>Viewer</h1>
<TTreeViewer ttrees="@(new TTree[]{currentRecord})"> </TTreeViewer>
@foreach (var inverse in inverses)
{
    <h3>@Utils.GetOntLabel(inverse.Pred)</h3>
    var sources = ((TITree)inverse).Sources;
    <TTreeViewer ttrees="@sources"></TTreeViewer>
}


@code {
    [Parameter]
    public string entityId { get; set; }

    private TTree currentRecord;

    private TGroup[] inverses = null;
    TRecordBuilder recordBuilder;

    protected override void OnInitialized() // = On Page Load
    {
        if (entityId != null)
        {
            TRecordBuilder recordBuilder = new TRecordBuilder((UpiAdapter)db.GetAdapter(), db.ontology);
            currentRecord = recordBuilder.BuildTRecord(entityId);
            inverses = currentRecord.Groups.Where(gr => gr is TITree).ToArray();
            Utils.InitUtils(db);

        }
    }

    protected override void OnParametersSet()
    {
        OnInitialized();
    }

}
