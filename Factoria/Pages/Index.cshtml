@page
@using System.Xml.Linq;
@using FactographData;
@using RazorPagesMovie.Pages.Movies;
@inject FactographData.IFDataService db

@model IndexModel
@{
    ViewData["Title"] = "Home page";
    string[] typs = db.ontology.DescendantsAndSelf("http://fogid.net/o/sys-obj").ToArray();
    TTree? ttree = Model.tree;
    string? ont(string? term) => term==null ? null : db.ontology.LabelOfOnto(term);
}
@* ============= Раздел поиска =========== *@
<div style="margin-bottom:20px;">
    <form>
        <select asp-for="Genre" asp-items="Model.Genres">
            <option value=""></option>
            @foreach(string ttp in typs)
            {
                var label = db.ontology.LabelOfOnto(ttp);
                if (string.IsNullOrEmpty(label)) { continue; }
                <option value="@(ttp)">@(label)</option>
            }
        </select>
        <input type="text" asp-for="searchsample" />
        <span>расш.<input type="checkbox" asp-for="extended" /></span>
        <input type="submit" value="Search" />
    </form>
</div>
@if (Model.query != null)
{
    IEnumerable<XElement> qu = Model.query;
    if (!string.IsNullOrEmpty(Model.Genre)) qu = qu.Where(q => q.Attribute("type")?.Value == Model.Genre);
    foreach (XElement x in qu)
    {
        string lnk = "/Index/" + x.Attribute("id")?.Value;
        string? name = x.Elements("field").FirstOrDefault(f => 
            f.Attribute("prop")?.Value == "http://fogid.net/o/name")?.Value;
        <div>
            <span style="color:red;">@(ont(x.Attribute("type")?.Value))</span>
            <a href="@(lnk)">@name</a>
        </div>
    }
}
@* ============= Раздел портрета =========== *@

@if (ttree != null)
{
    TGroup[] fds = ttree.Groups.Where(g => g is TString || g is TTexts || g is TDTree).ToArray();
    TITree[] tigs = ttree.Groups
                    .Where(g => g is TITree)
                    .Cast<TITree>()
                    .ToArray();
    <table border="1">
        <tr><td colspan="@(fds.Count())"><span style="color:red;">@(ont(ttree.Tp))</span><span>&#xA0; @(ttree.Id)</span></td></tr>
        <tr valign="top" style="background-color:lightgray; font-size:smaller; font-weight: bold;">
            @foreach (var gr in fds)
            {
                <td>@(ont(gr.Pred))</td>
            }
        </tr>
        <tr>
            @foreach (var gr in fds)
            {
                if (gr is TString)
                {
                    TString str = (TString)gr;
                    string val = str.Value;
                    if (!string.IsNullOrEmpty(val) && db.ontology.IsEnumeration(gr.Pred)) { val = db.ontology.EnumValue(gr.Pred, val, "ru"); }
                    <td>@(val)</td>
                }
                else if (gr is TTexts)
                {
                    TTexts txts = (TTexts)gr;
                    string tresult = txts.Values.Length==0? "" : txts.Values[0].Text;
                    <td>@(tresult)</td>
                }
                else if (gr is TDTree)
                {
                    var direct = ((TDTree)gr).Resource;
                    if (direct != null)
                    {
                        var names = direct.GetTTexts("http://fogid.net/o/name"); //TODO: 
                        string name = names == null ? "" : names[0].Text;
                        string idd = direct.Id;
                        <td><a href="/Index/@(idd)"> @name </a></td>
                    }
                    else
                    {
                        <td></td>
                    }
                }
                else
                {
                    <td></td>
                }
            }
        </tr>
    </table>
    <table border="1">
        @foreach (var tig in tigs)
        {
            if (tig == null) { continue; }
            var srces = tig.Sources
                .GroupBy(s => s.Tp);
            <tr valign="top">
            <td>@(ont(tig.Pred))</td>
            <td>
                    @foreach (var pair in srces)
                    {
                        string tp = pair.Key;
                        var sequ = pair.ToArray();
                        if (sequ.Length == 0) { continue; }
                        var first_row = sequ[0];
                        <table border="1">
                            <tr>
                                <td colspan="6">
                                    <span style="color:red;">@(ont(tp))</span>
                                </td>
                            </tr>


                            <tr valign="top" style="background-color:lightgray; font-size:smaller; font-weight: bold;">
                                @foreach (var gr1 in first_row.Groups
                                    .Where(g => g is TString || g is TTexts || g is TDTree)
                                    .Where(g => g.Pred != tig.Pred) // Отсечка запрещенных
                                )
                                {
                                    <td>@(ont(gr1.Pred))</td>
                                }
                            </tr>
                            @foreach (var tt in sequ)
                            {
                                TGroup[] fds1 = tt.Groups
                                .Where(g => g is TString || g is TTexts || g is TDTree)
                                .Where(g => g.Pred != tig.Pred) // Отсечка запрещенных
                                .ToArray();
                            <tr>
                                @foreach (var gr1 in fds1)
                                {
                                    if (gr1 is TString)
                                    {
                                        TString str = (TString)gr1;
                                        string val = str.Value;
                                        if (!string.IsNullOrEmpty(val) && db.ontology.IsEnumeration(gr1.Pred)) { val = db.ontology.EnumValue(gr1.Pred, val, "ru"); }
                                        <td>@(val)</td>
                                    }
                                    else if (gr1 is TTexts)
                                    {
                                        TTexts txts = (TTexts)gr1;
                                        string tresult = txts.Values.Length == 0 ? "" : txts.Values[0].Text;
                                            <td>@(tresult)</td>
                                        }
                                        else if (gr1 is TDTree)
                                        {
                                            var direct = ((TDTree)gr1).Resource;
                                            if (direct != null)
                                            {
                                                var names = direct.GetTTexts("http://fogid.net/o/name");
                                                string name = names == null ? "" : names[0].Text;
                                                string idd = direct.Id;
                                                <td><a href="/Index/@(idd)"> @name </a></td>
                                            }
                                            else
                                            {
                                                <td></td>
                                            }
                                        }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                            </tr>
                            }

                        </table>
                    }
            </td>
        </tr>
        }
    </table>
}

