# Дневник разработки

### 20241214 11:44
Что-то мысли плохо собираются. Хотел начать вновь писать дневник и делать разработку варианта soran1957 еще вчера,
но целый день до глубокой ночи пришлось заниматься ремонтом отопления в доме...

Итак, я пытаюсь воспроизвести построение старых лет (2009-2011). Сначала сделал html-макет. Он работает, поместил его в 
Layout, теперь надо наладить элементы картины. Первое - присоединение к данным и их использование. Попробую ограничиться 
технологиями Pages. Заведу сервис данных такой же, как и ранее, потом буду вычленять компоненты.

Сначала я подсоединил базу данных стандартными средствами, т.е. через Factograph.Data. Теперь сделаю визуализацию фотографий.
Раньше я это делал через специаилизрованный контроллер, но в последнем эксперименте, выполнишл это "напрямую", т.е. через 
обработчика
app.MapGet("/docs", Soran1957.ShowDocs.CreateMime);

Возможно, это более эффективно, но вернусь к контроллеру, тем более, сервисы Middleware удобнее подключать через контроллер или
через страницы Page. Запрос должен выглядеть как-то так:
https://localhost:54460/docs/GetImage?u=iiss://Cassette_20211014@iis.nsk.su/0001/0001/0008&s=normal

Начало положено, фотку получил. Теперь есть дефолтная страница.

### 20241215 10:56
Следующий шаг - разбить страницу на фон, основное тело и секции. Попробую сделать центральное тело и правую боковую секцию.

https://localhost:7177/Home/PublicuemCommon/soran1957styles/img/logo2.gif

### 20241228 05:15
Я немножко запутался в разработке, но кажется, уже понял как надо делать. Видимо надо сделать 
MVC-приложение с несколькими разделами и дизайнами. Но для начала, я проверил работоспособность 
некоторых старых компонентов. Неожиданность "подстерегла" где-то "снаружи" - создал проблемы github.
От и раньше что-то не всегда понятное делал, а теперь я вовсе не могу с ним справиться. Я пытаюсь выйти
на свои репозитории через сайт, но при авторизации говорит, что 
"Enable 2FA now. You'll be able to continue on with your work right after.". А при попытке сделать 2-факторность
через sms, не дает кода России, как возможного кода страны. И Казахстана тоже... Получается, что я могу 
использовать гитхаб только в режиме чтения уже записанных решений. Придется что-то делать, надо спрашивать
молодых.

Возвращаюсь к разработке. Когда я преодолел некоторые проблемы предыдущих решений по CManager'а, я решил 
заняться выправлением кассет через CassConsoleApp. Оказалось, что там не все сделано и пришлось потратить
усилия (и время) на то, чтобы что-то заработало. Приложение умеет читать группы кассет, используя обычный 
конфигуратор, умеет нормализовывать кассеты - это когда заменяются нестандартные элементы iisstore и умеет
работать по улучшению мультимедиа документов - заменять в оригиналах tiff на jpeg, делать новые превьюшки
фотографий и обрабатывать видео путем превращения его в более экономные форматы и рамеры. Все эти 
функциональные "богатства" я еще не проверил, но что-то уже начало работать. Далее, я попытался сделать 
кассету, которую очевидно надо перерабатывать. Чтобы там были tiff'ы и видео. Все уже подзабыл, так что 
потратил кое-какое время. Выяснилось, что "нормализованные" кассеты не воспринимаются правильно CManager'ом.
С этим пока можно жить, но все же придется этот момент преодолевать. 

Потом я попробовал поработать с тестовой кассетой через MagBlazor. Опять же пришлось кое-что вспоминать, 
тратить на это время. Заодно, выявляются некоторые ошибки или неточности. В частности:

Ошибка в MagBlazor: иногда не удается выполнить поиск по строковому образцу. Просто ничего не находит. 
Если перезагрузить страницу, поиск "возвращается". 

Я остановился на проверке работы CassConsoleApp. Попробую продолжить. 

20241229 15:37
Я покопался в предыдущих решениях и, похоже, теперь более или менее готов к интеграции разработок.
Идея следующая: делается .NET Core MVC проект, в котором располагается фактографическая основа: база данных,
доступы, авторизация и пр. и располагаются разные фронтенд-проекты. В итоге представляется, что будут интерфейс
типа soran1957, канонический многотабличный интерфейс, потом интерфейсы можно добавлять по необходимости. Вроде 
понятно как управлять стилями. Пока непонятно как разграничить код, но может этого делать и не надо. Попробую. 
Назову проект Factograph. 

Пошло дело. Вроде получается как я и хотел. Правда иногда фотку надо бы вкладывать в разработанный в стиле 
размер, но это уже слишком тонко...

Попробую сделать альтернативный стиль и раскладку. Пусть это будет View. 

### 20250102 06:35
Наступил Новый год! Наверное, правильнее писать в даном случае "новый год". Я заметно продвинулся в своей
разработке. Как я ее вижу? Делается общее решение в котором есть и фактографическая база данных и авторизация
и все то, что составляет инфраструктуру. И делаются частные приложения и интерфейсы. Со своими принципами и
интерфейсами. После того, как я не доделал S1957, я занялся этим новым подходом, который назвал Factograph.
В нем есть раздел Docs, Home, View. Разделаются средствами контроллер, модель, вид. Docs обеспечивает доступ
к документам, Номе - это основной интерфейс, я вопроизведу soran1957, View - это наконический многотабличный
интерфейс. Наверное, надо будет сделать еще Edit, OpenArchive, Family и др. В общем, есть чем заниматься.

Я хочу попробовать себя (и, возможно, Петю) в роли организатора прикладной части ИСИ. Я хочу предолжить 
заинтересованным сотрудинкам собраться и обсудить идеи, которые могут быть у них. И мои тоже. Мои идеи пока
следующие: создать творческий коллектив, который нацелить на разработку и продажу прикладных решений. С моей
стороны это видится как некоторые разделы биоинформатики и второе направление - информационные системы, 
основанные на онтологиях. Очень важно централизовать маркетинг, рекламную, экономическую, правовую и 
юридическую поддержку. Для этого хорошо бы иметь специалистов, которых похоже у нас нет. Может что-то нужно 
отдать на аутсорсинг. Отдел мог бы взять на себя сопровождение и развитие серверного хозяйства, консультации 
и помощь службам ИСИ по работе с вычислительной техникой и программным обеспечением. Отдел мог бы заниматься 
регистрацией ПО и баз данных, т.е. вносить вклад и в научную копилку ИСИ. Можно еще порассуждать о рынках. 
Может еще какие-то задачи системного программирования можно было бы осилить. Коммерческое обучение? 
Экспертиза и консультации. 

Продолжу делать View. Следующий шаг - сделать обратные отношения. Попробую. 

Начальный вариант интерфейса View я сделал. Надо бы поработать над документами и сокрытием ненужных полей.
Сделаю визуализацию фото документов и вернусь к soran1957 (S1957).  

### 20250103 14:22
Вышел на серьезную проблему. Дело в том, что элемент коллекции - системный объект sys-obj. А у него нет uri.
В итоге, в шаблоне выборки uri отсутствует и не выбирается из данных. Если обобщать, что наследование свойств
не очень хорошо реализовано в том плане, что берется главный таргет и в нем могут отсутствовать поля, 
имеющиеся в подклассах. Существенным это будет для наследников sys-obj, document, может еще каких-то. 
У документа есть встроенные uri и docmetainfo.

Я прогулялся и подумал. Первое соображение заключается в том, что альтернативность типов целей, при 
существующей онтологии, выражается "внутри" ячеек визуализации. Второе соображение: можно не формировать 
дерево, а сделать простую основу. Все, что нужно, потом можно будет брать динамически из онто определений.
Третье соображение: можно сделать "влоб", т.е. альтернативы перечислять в вие спецификаций в соответствующих
разделах Dir. Можно еще "вручную" формировать или доделывать ApplicationProfile. 

Пойду пока третьим путем, через модификацию структур Dir. Семантика основных структурных построений следующая:
запись Rec состоит из прямых полей и прямых ссылок и обратных ссылок. Обратные ссылки, это обратная объектная
стрелка и далее множество записей, в которых есть поля и прямые ссылки кроме той, которая есть обратная.
Обратные ссылки могут группироваться через предикат обратной ссылки и обычно группируются, структура Inv
позволяет. Прямые ссылки разворачиваются в конструкцию Dir. Прямые ссылки также группируются вокруг обратного
предиката (стрелки).

Для управления формированием дерева выборки, введем структуру шаблона. Шаблон, это тот же рассширенный Rec,
определяющий какова будет формируемая из графа структура. Какие-то элементы структуры могут оставаться
пустыми, напр. идентификатор, тип. В этом случае, элемент "работает" в технике сопоставления с образцом. 
Но пока я эти возможности не анализировал. Запись сопоставляется через сопоставление полей, прямых и обратных 
ссылок. 

Проработка вопросов сопоставления может стать глубокой основой логического программирования для моего подхода
к "однородной систамы программирования". А может и нет...

Вернусь к шаблонам. 

### 20250105 11:49
Вчера пытался сделать генератор универсальных шаблонов, но что-то запутался и, кажется, у меня
не получилось. Я перенес генератор в другое место, по-другому его назвал. А главное изменение было 
в том, что при отрабатывании прямой ссылки, я предполагал, что у данного свойства (у данного типа 
стрелки) есть несколько вариантов типа цели range. И все эти варианты надо прописать в дереве под
структурой Dir. Возможно, я не на том примере искал... 

Кстати, деревья шаблонов получаются довольно большими, хотя может быть это из-за 15 типов, для которых
строятся шаблоны. 

Итак, рассмотрю пример. Он есть у меня в данных. Пусть есть класс "Кассета". В шаблоне для этого класса
есть поля типа "имя", но и есть обратное свойство "коллекция для". В онтологии это выглядит как
класс http://fogid.net/o/cassette, который являетс подклассом коллекции http://fogid.net/o/collection.
Также есть псевдо класс http://fogid.net/o/collection-member и объектное свойство 
http://fogid.net/o/in-collection, соединяющее члена коллекции (domain) и коллекцию (range). Также
есть другое объектное свойство http://fogid.net/o/collection-item, соединяющее члена коллекции с
системным объектом http://fogid.net/o/sys-obj по той же схеме (domain-range). А уж системный объект
может быть и персоной и документом и рядом других вариантов (всего 15). Попробую проанализировать то, 
что у меня получается. 

Проверил. Действительно, там, где должны быть 15 вариантов sys-obj типов, стоит только он один. Как-то 
надо докопаться до проблемы через глубокую рекурсию...

### 20250106 17:24
Копался, копался и докопался. Проблема в генераторе Build, создающем по заданному RRec и шаблону
Rec-дерево. Генератор написан не очень прозрачно и хочется его переписать. Как он должен работать? 
Расширенная запись RRec содержит два важных поля Id и Tp и неупорядоченный набор свойств RField, 
RLink, RInverseLink с суперклассом RProperty. В результате обработки, эти свойства должны 
сгруппироваться и упорядочиться в соответствии с шаблоном. Попробуем наметить такого преобразования.

Чтобы вносить меньше динамизма в обработку, предлагается создать массив массивов свойств. Первый уровень
массива образуют свойства шаблона. На каждое такое свойство формируется массивчик элементов RProperty,
соответствующих этой группе. Это означает, что предикат должен быть общим у шаблона и у группируемых
RProperty-свойств. Также RLink попадают в группу Dir, а RInverseLink попадают в группу Inv. И только 
RField разводится по группам Tex и Str. Как это сделать максиально экономно? Заводим массив, 
соответствующий свойствам шаблона. Берем RProperty, выявляем какого оно класса и через одну из трех 
хеш-таблиц находим номер свойства в шаблоне. Свойство добавляем в подмассив. 

20250107 13:37
Я долго думал о том как должен быть устроена программа выборки дерева по шаблону. Кажется, в прошлый
раз я пошел по сложному и неправильному пути. Сейчас я хочу сделать максимально просто и, надеюсь,
эффективно. 

Пусть есть запись RRecord и шаблон Rec. Сравниваются идентификаторы и типы. Если кто-то
не совпадает, то возвращается null. Совпадением является также null на стороне шаблона. Последнее требует
дополнительных изучений. Далее, Выстраивается массив arr пустых списков (можно и с подмассивами) свойств
RProperty. Количество элементов массива совпадает с количеством элементов Prop шаблона. Заводим три (!)
словаря fieldDic, directDic, inverseDic, все типа Dictionary<string, RProperty> и в цикле по элементам 
(свойствам) шаблона, заполняем словари парами строка-номер. Где строка - используемый предикат, а номер 
свойства (индекс цикла). Подготовку словарей, в дальнейшем, можно будет сделать заранее.  

Далее, в цикле по свойствам записи, определяем их класс (RField, RLink, RInverseLink) и в соответствующем
словаре находим номер элемента в результате. В эту позицию массива добавляем свойство. После заполнения
массива, проходим по нему и формируем свойства Pro для результирующего Rec. Можно пробовать это начало,
корректными будут поля. 

20250109 18:19
Наконец, нашел и исправил ошибку. Уже можно выходить на готовое решение. Для этого, надо из
визуализации таблиц устранить поля uri и docmetainfo. Попробую сделать это оперативно. 

20250112 06:02
Указанные поля устранил. То есть, они остались в извлекаемых данных, но не визуализируются. И в дальнейшем,
не редактируются. 

Пора испытать то, что получилось в серверном варианте. Заодно, сделаю файловый репозиторий. 




